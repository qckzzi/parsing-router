[tool.poetry]
name = "parsing-router"
version = "0.1.0"
description = ""
authors = ["Roman Frolov <f.roman34@mail.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
loguru = "^0.7.2"
pydantic = "^2.6.4"
pydantic-settings = "^2.2.1"
faststream = {extras = ["docs", "rabbit"], version = "^0.4.7"}
fresh-bakery = "^0.3.3"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.2"
mypy = "^1.9.0"
ruff = "^0.3.4"
absolufy-imports = "^0.3.1"
pytest = "^8.1.1"
faker = "^24.4.0"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.23.6"

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
strict_optional = true
allow_redefinition = true
disallow_incomplete_defs = true

[tool.ruff]
exclude = [
    ".git",
    ".mypy_cache",
    ".venv",
    ".env",
    ".pytest_cache",
]
fix = true
unsafe-fixes = true
show-fixes = true
target-version = "py312"
line-length = 120

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint]
ignore = ["EM","FBT","TRY003", "D1", "D203", "D213", "FA", "ANN101", "ANN102", "S311", "INP001", "RET501", "TCH001", "TCH002","TCH003", "UP040", "ANN401", "G004"]
select = ["ALL"]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*.py" = [
    "ANN001",
    "ANN002",
    "ANN003",
    "ANN401",
    "S101",
    "PLR2004",
    "S311",
]

[tool.ruff.lint.isort]
no-lines-before = ["standard-library", "local-folder"]
known-third-party = []
known-local-folder = []
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
